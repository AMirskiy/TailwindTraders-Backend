name: TailwindTraders Website Pipelines
on:
  push:
    branches: [main, create-cicd-action, ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  schedule:
    - cron: '0 0 * * *'

jobs:
  nightly-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout Github Action'
      uses: actions/checkout@master

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Set Azure subscription
      run: |
        az account set -s ${{ secrets.AZURE_SUBSCRIPTION }}
    
    - name: Docker login
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Install Helm
      run : |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Set environment variables
      shell: pwsh
      working-directory: Deploy/powershell
      run: |
        $gValuesLocation=$(./Join-Path-Recursively.ps1 -pathParts ..,helm,__values, configFile.yaml)
        echo "GVALUES_LOCATION=$gValuesLocation" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Generate config
      shell: pwsh
      run: |
        Deploy/powershell/Generate-Config.ps1 -resourceGroup ${{ secrets.RESOURCE_GROUP }} -outputFile ${{ env.GVALUES_LOCATION }}

    - name: Create secrets
      shell: pwsh
      run: |
        Deploy/powershell/Create-Secret.ps1 -resourceGroup ${{ secrets.RESOURCE_GROUP }} -acrName ${{ secrets.ACR_NAME }}

    - name: Docker build and push
      shell: pwsh
      run: |
        Deploy/powershell/Build-Push.ps1 -resourceGroup ${{ secrets.RESOURCE_GROUP }} -acrName ${{ secrets.ACR_NAME }}

    - name: Deploy images
      shell: pwsh
      run: |
        Deploy/powershell/Deploy-Images-Aks.ps1 -aksName ${{ secrets.AKS_NAME }} -resourceGroup ${{ secrets.RESOURCE_GROUP }} -acrName ${{ secrets.ACR_NAME }} -valuesFile ${{ env.GVALUES_LOCATION }}
    
    - name: Deploy pictures
      shell: pwsh
      run: |
        Deploy/powershell/Deploy-Pictures-Azure.ps1 -resourceGroup ${{ secrets.RESOURCE_GROUP }} -storageName ${{ secrets.STORAGE_NAME }}
